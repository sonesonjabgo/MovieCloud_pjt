router로 컴포넌트 변경하면 django에서 redirect 하듯이 못하니까
store.state 정보를 바꿔놓자.
그래서 일단 다른 사람 프로필 들어가는 경우는 community의 작성자를 클릭하는 방법 밖에 없음.
그래서 community의 detail 페이지에 들어가면 거기에 있는 작성자 정보를 store의 state에 있는
profile_username, profile_userid, profile_userfollower, profile_userfollowing, profile_following_list에 넣어놓음.
그리고 그 상태에서 작성자 이름 누르면 router-link로 profile 페이지로 넘어가는데 데이터는 그 작성자꺼로 들어가있으니까 될 듯
내 프로필 보는거랑 다른 사람 프로필 보는거랑 정보가 다르게 전달되어야 하는데 복잡할 거 같으니까 nav bar에서 profile 눌렀을 때 router랑
작성자 눌렀을 때 router 다르게 주고 대신 페이지는 view 똑같이 써야겠다.

내 프로필 볼 때는 login_ 데이터들 넣고, 이거는 로그인 할 때 state에 다 넣어줌

다른 사람 프로필 볼 때는 profile_데이터들 넣고, 이거는 article 상세페이지 볼 때 state에 다 넣어줌

근데 내가 작성자 내꺼 눌러서 볼 때는 어떡할거냐.
article 상세 페이지에서 router-link 연결된 작성자 2개 만들어 놓고 v-if 먹여서 login_ 이랑 profile_ 이랑 같으면 store.getters에 same_user true줘서 그러면 내 프로필 보여주는 router로 주고 v-if 반대꺼는 다른 사람 프로필 보여주는 router 주기.


-----------------------------------------------
추가로 수정해야할거
MyProfileView.vue created 될 때는 commit 요청 보내서 profile_ 데이터 다 null로 바꿔야할듯

팔로우 기능 수정해야하고, 
    - 팔로우할 때 토큰 같이 던져줘야됨.

프로필에서 article 리스트 받아오게 해야하고, 데이터 바뀌면 바로바로 처리할 수 있도록 재형님이 mm보내주신 코드 그거 참고해서 component 마다 변경

--------------------------------------------------------------------
5월 24일
완성한거
    - nav bar에서 프로필 누르면 내 프로필로 넘어가고

    - 게시글 디테일 들어갔을 때 작성자 정보랑 프로필 정보 같으면 내프로필로 넘어감(MyProfileView.vue 보이게)

    - 게시글 디테일 들어갔을 때 작성자 정보랑 프로필 정보랑 다르면 다른사람 프로필로 넘어감 (OtherProfileView.vue 보이게)

    - 팔로우 완성. 버튼까지 잘 바뀜

    - MyProfileView랑 OtherProfileView에 데이터 바로 반영되도록 수정

해야할거
    - 팔로우 수정
    - 게시글 상세조회하면 댓글 작성할 수 있게(필수임)
    - MyProfileView랑 OtherProfileView에 데이터 바로 반영되도록 수정


지금 되는 기능
    - 로그인 했을 경우 전체 게시글 조회, 게시글 생성
    - 로그인 했을 경우 게시글 상세조회
    - 팔로우


token 줘야하는 기능들
    - 팔로우
    - 전체 게시글 조회, 작성
    - 게시글 상세 조회, 삭제, 수정
    - 게시글에 대한 댓글 조회, 생성


-------------------------------------------
댓글달기

    - article 상세 조회에 들어가면 글에 대한 정보가 있고 밑에 댓글 작성 버튼 있고, 그 밑에 작성된 댓글들이 있을거임
    - 댓글 작성 버튼 누르면 create comment view.vue로 이동.
    - create comment view.vue에서 axios 요청보내기


-----------------------------------------------------
더미 데이터 만들기
user는 1번부터 7번까지 존재

articles.json 에서 comments_users는 수동으로 comments 만들고 맞춰서 넣으면 될듯

